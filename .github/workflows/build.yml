name: CloudflareST

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
          - goos: linux
            goarch: 386
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: linux
            goarch: mips
          - goos: linux
            goarch: mips64
          - goos: linux
            goarch: mipsle
          - goos: linux
            goarch: mips64le
          - goos: linux
            goarch: riscv64
          - goos: linux
            goarch: arm
            goarm: 5
          - goos: linux
            goarch: arm
            goarm: 6
          - goos: linux
            goarch: arm
            goarm: 7
          - goos: windows
            goarch: 386
          - goos: windows
            goarch: amd64
          - goos: windows
            goarch: arm64
          - goos: android
            goarch: arm64

    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}
      CGO_ENABLED: 0
      version: "v2.2.5"

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4

      - name: Show workflow information
        run: |
          export _NAME=$GOOS-$GOARCH$GOARM$GOMIPS
          echo "GOOS: $GOOS, GOARCH: $GOARCH, GOARM: $GOARM, GOMIPS: $GOMIPS"
          echo "ASSET_NAME=CloudflareST_$_NAME" >> $GITHUB_ENV
          echo "RELEASE_NAME=CloudflareST_$_NAME" >> $GITHUB_ENV
          echo "REF=${GITHUB_SHA::6}" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          check-latest: true

      - name: Build CloudflareST for non-Windows
        if: matrix.goos != 'windows'
        run: |
          go build -v -o build_assets/CloudflareST -trimpath -ldflags "-s -w -X main.version=${version}" .

      - name: Build CloudflareST for Windows
        if: matrix.goos == 'windows'
        run: |
          go build -v -o build_assets/CloudflareST.exe -trimpath -ldflags "-s -w -X main.version=${version}" .

      - name: Copy additional files
        run: |
          cp ${GITHUB_WORKSPACE}/Country.mmdb ./build_assets/Country.mmdb
          cp ${GITHUB_WORKSPACE}/ip.txt ./build_assets/ip.txt
          cp ${GITHUB_WORKSPACE}/ipv6.txt ./build_assets/ipv6.txt
          cp ${GITHUB_WORKSPACE}/README.md ./build_assets/README.md

      - name: Create ZIP archive for non-Windows
        if: matrix.goos != 'windows'
        shell: bash
        run: |
          pushd ./build_assets || exit 1
          touch -mt $(date +%Y01010000) *
          zip -9vr ../${{ env.RELEASE_NAME }}.zip *
          popd || exit 1

      - name: Create ZIP archive for Windows
        if: matrix.goos == 'windows'
        shell: bash
        run: |
          pushd ./build_assets || exit 1
          touch -mt $(date +%Y01010000) *
          zip -9vr ../${{ env.RELEASE_NAME }}.zip CloudflareST.exe Country.mmdb ip.txt ipv6.txt README.md
          popd || exit 1

      - name: Rename build directory (for non-Windows)
        if: matrix.goos != 'windows'
        run: |
          mv ./build_assets ./${{ env.RELEASE_NAME }}

      - name: Rename build directory (for Windows)
        if: matrix.goos == 'windows'
        run: |
          mv ./build_assets ./${{ env.RELEASE_NAME }}

      - name: Upload files to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.RELEASE_NAME }}
          path: |
            ./${{ env.RELEASE_NAME }}/*

      - name: Upload binaries to release
        if: github.event_name == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./${{ env.RELEASE_NAME }}.zip
          tag: ${{ github.ref }}
          file_glob: true
